[
    {
        "question": "Which Kubernetes object is used to ensure a specified number of pod replicas are running?",
        "options": [
            "Deployment",
            "StatefulSet",
            "DaemonSet",
            "ReplicaSet"
        ],
        "correct_option_id": 3,
        "explanation": "A ReplicaSet ensures that a specified number of pod replicas are running at all times."
    },
    {
        "question": "In CI/CD pipelines, what is the primary purpose of a staging environment?",
        "options": [
            "To build the application",
            "To deploy production changes",
            "To simulate production for testing",
            "To store artifacts"
        ],
        "correct_option_id": 2,
        "explanation": "A staging environment is used to simulate the production environment for testing purposes before deploying to production."
    },
    {
        "question": "What is the role of an Ingress in Kubernetes?",
        "options": [
            "To manage internal pod communication",
            "To expose services to the internet",
            "To monitor cluster metrics",
            "To provide persistent storage for pods"
        ],
        "correct_option_id": 1,
        "explanation": "An Ingress manages external access to services, typically HTTP, by providing routing rules."
    },
    {
        "question": "Which tool is most commonly used for container orchestration?",
        "options": [
            "Docker",
            "Kubernetes",
            "Terraform",
            "Ansible"
        ],
        "correct_option_id": 1,
        "explanation": "Kubernetes is the most widely used tool for container orchestration, managing containerized applications across clusters."
    },
    {
        "question": "In Git, what does the command `git cherry-pick` do?",
        "options": [
            "Reverts a specific commit",
            "Combines multiple branches",
            "Applies changes from a specific commit to another branch",
            "Lists commits with conflicts"
        ],
        "correct_option_id": 2,
        "explanation": "The `git cherry-pick` command applies the changes from a specific commit to the current branch."
    },
    {
        "question": "What does the `terraform plan` command do?",
        "options": [
            "Applies infrastructure changes",
            "Generates and shows the execution plan for changes",
            "Destroys infrastructure resources",
            "Installs Terraform providers"
        ],
        "correct_option_id": 1,
        "explanation": "`terraform plan` generates and shows the execution plan, allowing users to preview changes before applying them."
    },
    {
        "question": "What is the main purpose of a service mesh in a microservices architecture?",
        "options": [
            "To build microservices",
            "To deploy containers",
            "To manage service-to-service communication",
            "To create network policies"
        ],
        "correct_option_id": 2,
        "explanation": "A service mesh manages service-to-service communication, including traffic control, observability, and security."
    },
    {
        "question": "In Jenkins, what is a 'pipeline'?",
        "options": [
            "A container for storing code",
            "A series of steps to automate software delivery processes",
            "A method for monitoring build status",
            "A plugin for integrating with Git"
        ],
        "correct_option_id": 1,
        "explanation": "A pipeline in Jenkins is a series of steps that automate software delivery processes, from build to deployment."
    },
    {
        "question": "Which of the following is an Infrastructure as Code (IaC) tool?",
        "options": [
            "Docker",
            "Terraform",
            "Kubernetes",
            "Jenkins"
        ],
        "correct_option_id": 1,
        "explanation": "Terraform is an Infrastructure as Code (IaC) tool that allows users to define and manage infrastructure using code."
    },
    {
        "question": "What is the purpose of `kubectl logs` in Kubernetes?",
        "options": [
            "To deploy a pod",
            "To view the resource configuration",
            "To fetch logs from a pod",
            "To scale a deployment"
        ],
        "correct_option_id": 2,
        "explanation": "`kubectl logs` fetches and displays logs from a specific pod or container in Kubernetes."
    },
    {
        "question": "Which Kubernetes object is used to ensure a specified number of pod replicas are running?",
        "options": [
            "Deployment",
            "StatefulSet",
            "DaemonSet",
            "ReplicaSet"
        ],
        "correct_option_id": 3,
        "explanation": "A ReplicaSet ensures that a specified number of pod replicas are running at all times."
    },
    {
        "question": "In CI/CD pipelines, what is the primary purpose of a staging environment?",
        "options": [
            "To build the application",
            "To deploy production changes",
            "To simulate production for testing",
            "To store artifacts"
        ],
        "correct_option_id": 2,
        "explanation": "A staging environment is used to simulate the production environment for testing purposes before deploying to production."
    },
    {
        "question": "What is the role of an Ingress in Kubernetes?",
        "options": [
            "To manage internal pod communication",
            "To expose services to the internet",
            "To monitor cluster metrics",
            "To provide persistent storage for pods"
        ],
        "correct_option_id": 1,
        "explanation": "An Ingress manages external access to services, typically HTTP, by providing routing rules."
    },
    {
        "question": "Which tool is most commonly used for container orchestration?",
        "options": [
            "Docker",
            "Kubernetes",
            "Terraform",
            "Ansible"
        ],
        "correct_option_id": 1,
        "explanation": "Kubernetes is the most widely used tool for container orchestration, managing containerized applications across clusters."
    },
    {
        "question": "In Git, what does the command `git cherry-pick` do?",
        "options": [
            "Reverts a specific commit",
            "Combines multiple branches",
            "Applies changes from a specific commit to another branch",
            "Lists commits with conflicts"
        ],
        "correct_option_id": 2,
        "explanation": "The `git cherry-pick` command applies the changes from a specific commit to the current branch."
    },
    {
        "question": "What does the `terraform plan` command do?",
        "options": [
            "Applies infrastructure changes",
            "Generates and shows the execution plan for changes",
            "Destroys infrastructure resources",
            "Installs Terraform providers"
        ],
        "correct_option_id": 1,
        "explanation": "`terraform plan` generates and shows the execution plan, allowing users to preview changes before applying them."
    },
    {
        "question": "What is the main purpose of a service mesh in a microservices architecture?",
        "options": [
            "To build microservices",
            "To deploy containers",
            "To manage service-to-service communication",
            "To create network policies"
        ],
        "correct_option_id": 2,
        "explanation": "A service mesh manages service-to-service communication, including traffic control, observability, and security."
    },
    {
        "question": "In Jenkins, what is a 'pipeline'?",
        "options": [
            "A container for storing code",
            "A series of steps to automate software delivery processes",
            "A method for monitoring build status",
            "A plugin for integrating with Git"
        ],
        "correct_option_id": 1,
        "explanation": "A pipeline in Jenkins is a series of steps that automate software delivery processes, from build to deployment."
    },
    {
        "question": "Which of the following is an Infrastructure as Code (IaC) tool?",
        "options": [
            "Docker",
            "Terraform",
            "Kubernetes",
            "Jenkins"
        ],
        "correct_option_id": 1,
        "explanation": "Terraform is an Infrastructure as Code (IaC) tool that allows users to define and manage infrastructure using code."
    },
    {
        "question": "What is the purpose of `kubectl logs` in Kubernetes?",
        "options": [
            "To deploy a pod",
            "To view the resource configuration",
            "To fetch logs from a pod",
            "To scale a deployment"
        ],
        "correct_option_id": 2,
        "explanation": "`kubectl logs` fetches and displays logs from a specific pod or container in Kubernetes."
    },
    {
        "question": "Which tool is used to monitor container resource usage in Kubernetes?",
        "options": [
            "Prometheus",
            "Grafana",
            "cAdvisor",
            "Nagios"
        ],
        "correct_option_id": 2,
        "explanation": "cAdvisor is used to monitor container resource usage and performance in Kubernetes."
    },
    {
        "question": "In Kubernetes, what does the `kubectl apply` command do?",
        "options": [
            "Deletes resources from a cluster",
            "Applies a configuration to resources",
            "Lists all resources in a cluster",
            "Builds container images"
        ],
        "correct_option_id": 1,
        "explanation": "`kubectl apply` is used to apply a configuration file to create or update Kubernetes resources."
    },
    {
        "question": "What is the purpose of a `ServiceAccount` in Kubernetes?",
        "options": [
            "To define user authentication",
            "To allow pods to interact with the Kubernetes API",
            "To manage RBAC permissions for users",
            "To store sensitive environment variables"
        ],
        "correct_option_id": 1,
        "explanation": "`ServiceAccount` allows pods to authenticate with the Kubernetes API for accessing resources."
    },
    {
        "question": "What is the function of `kubectl port-forward`?",
        "options": [
            "To expose a service to the internet",
            "To forward traffic from a local machine to a Kubernetes pod",
            "To configure pod networking",
            "To scale deployments"
        ],
        "correct_option_id": 1,
        "explanation": "`kubectl port-forward` forwards traffic from a local machine to a Kubernetes pod for debugging or testing."
    },
    {
        "question": "What is the purpose of `Dockerfile`?",
        "options": [
            "To manage container images",
            "To define the instructions to build a Docker image",
            "To create container orchestration rules",
            "To store container logs"
        ],
        "correct_option_id": 1,
        "explanation": "A `Dockerfile` contains instructions used to build a Docker image."
    },
    {
        "question": "What does the `helm rollback` command do?",
        "options": [
            "Updates a Helm chart to a new version",
            "Deletes a Helm release",
            "Rolls back a Helm release to a previous version",
            "Lists all available Helm releases"
        ],
        "correct_option_id": 2,
        "explanation": "`helm rollback` reverts a Helm release to a previous version."
    },
    {
        "question": "What is the function of a PersistentVolume (PV) in Kubernetes?",
        "options": [
            "To define temporary storage for pods",
            "To provide persistent storage that outlives a pod's lifecycle",
            "To manage CPU and memory allocation",
            "To scale the cluster's resources"
        ],
        "correct_option_id": 1,
        "explanation": "A `PersistentVolume` provides persistent storage that outlives the lifecycle of pods."
    },
    {
        "question": "What is the purpose of `kubectl scale`?",
        "options": [
            "To create a new deployment",
            "To increase or decrease the number of pod replicas",
            "To resize cluster nodes",
            "To change the size of persistent storage"
        ],
        "correct_option_id": 1,
        "explanation": "`kubectl scale` changes the number of replicas for a Kubernetes deployment or replica set."
    },
    {
        "question": "What does the `ansible-playbook` command do?",
        "options": [
            "Runs tasks defined in an Ansible playbook",
            "Builds Docker containers",
            "Manages Helm charts",
            "Monitors system metrics"
        ],
        "correct_option_id": 0,
        "explanation": "`ansible-playbook` executes the tasks and roles defined in an Ansible playbook."
    },
    {
        "question": "Which of the following tools is used for logging in Kubernetes?",
        "options": [
            "Fluentd",
            "Grafana",
            "Jenkins",
            "Ansible"
        ],
        "correct_option_id": 0,
        "explanation": "Fluentd is a popular tool used for logging and aggregating logs in Kubernetes."
    },
    {
        "question": "What is the role of a Kubernetes controller?",
        "options": [
            "To expose services to the internet",
            "To ensure the desired state of resources is maintained",
            "To deploy container images",
            "To manage persistent volumes"
        ],
        "correct_option_id": 1,
        "explanation": "Kubernetes controllers ensure the desired state of resources is continuously maintained."
    },
    {
        "question": "What does the `docker ps` command do?",
        "options": [
            "Lists all running containers",
            "Starts a new container",
            "Removes unused images",
            "Builds a new Docker image"
        ],
        "correct_option_id": 0,
        "explanation": "`docker ps` lists all currently running containers."
    },
    {
        "question": "Which protocol is commonly used for communication between Prometheus and exporters?",
        "options": [
            "HTTP",
            "FTP",
            "gRPC",
            "MQTT"
        ],
        "correct_option_id": 0,
        "explanation": "Prometheus uses HTTP to communicate with exporters for scraping metrics."
    },
    {
        "question": "What is a StatefulSet in Kubernetes?",
        "options": [
            "An object for managing stateless applications",
            "An object for managing stateful applications",
            "A tool for monitoring pods",
            "A mechanism for scheduling nodes"
        ],
        "correct_option_id": 1,
        "explanation": "StatefulSet is used to manage stateful applications in Kubernetes, ensuring predictable pod identity."
    },
    {
        "question": "Which CI/CD tool uses Jenkinsfiles?",
        "options": [
            "GitLab",
            "CircleCI",
            "Jenkins",
            "ArgoCD"
        ],
        "correct_option_id": 2,
        "explanation": "Jenkins uses Jenkinsfiles to define pipelines for CI/CD."
    },
    {
        "question": "What does the `kubectl create configmap` command do?",
        "options": [
            "Creates a ConfigMap from a file or literal values",
            "Generates a YAML file for ConfigMap",
            "Deletes an existing ConfigMap",
            "Lists all ConfigMaps"
        ],
        "correct_option_id": 0,
        "explanation": "`kubectl create configmap` creates a new ConfigMap from a file or provided values."
    },
    {
        "question": "What is the purpose of a Horizontal Pod Autoscaler in Kubernetes?",
        "options": [
            "To scale nodes in a cluster",
            "To scale pods based on resource usage",
            "To manage network policies",
            "To balance traffic across services"
        ],
        "correct_option_id": 1,
        "explanation": "The Horizontal Pod Autoscaler automatically scales the number of pods based on resource usage."
    },
    {
        "question": "What does the `terraform init` command do?",
        "options": [
            "Applies changes to infrastructure",
            "Initializes a Terraform working directory",
            "Destroys infrastructure resources",
            "Lists Terraform modules"
        ],
        "correct_option_id": 1,
        "explanation": "`terraform init` initializes a working directory by downloading providers and setting up the environment."
    },
    {
        "question": "Which Kubernetes object manages network traffic for a service?",
        "options": [
            "Ingress",
            "Service",
            "Pod",
            "Endpoint"
        ],
        "correct_option_id": 0,
        "explanation": "Ingress manages external network traffic for services in Kubernetes."
    },
    {
        "question": "What is the function of a Docker registry?",
        "options": [
            "To build container images",
            "To run containers",
            "To store and distribute container images",
            "To monitor containers"
        ],
        "correct_option_id": 2,
        "explanation": "A Docker registry is used to store and distribute container images."
    },
    {
        "question": "Which tool is commonly used for managing IaC in cloud environments?",
        "options": [
            "Docker",
            "Terraform",
            "Grafana",
            "Prometheus"
        ],
        "correct_option_id": 1,
        "explanation": "Terraform is commonly used for managing Infrastructure as Code (IaC) in cloud environments."
    },
    {
        "question": "What does the `kubectl get pods -o wide` command do?",
        "options": [
            "Displays detailed logs of all pods",
            "Lists all pods with additional information like node and IP",
            "Shows the YAML configuration of all pods",
            "Deletes all pods in the namespace"
        ],
        "correct_option_id": 1,
        "explanation": "`kubectl get pods -o wide` lists pods with additional details such as the node they're running on and their IP addresses."
    },
    {
        "question": "What is the primary purpose of a ReplicaSet in Kubernetes?",
        "options": [
            "To manage ingress rules",
            "To ensure a specified number of pod replicas are running",
            "To configure persistent storage",
            "To set up RBAC roles"
        ],
        "correct_option_id": 1,
        "explanation": "A ReplicaSet ensures a specified number of pod replicas are running at all times."
    },
    {
        "question": "What is the default namespace in Kubernetes?",
        "options": [
            "kube-system",
            "default",
            "kube-public",
            "admin"
        ],
        "correct_option_id": 1,
        "explanation": "The `default` namespace is used when no namespace is explicitly specified in Kubernetes."
    },
    {
        "question": "Which command is used to initialize a Kubernetes cluster?",
        "options": [
            "kubeadm init",
            "kubectl init",
            "kubelet init",
            "kubernetes start"
        ],
        "correct_option_id": 0,
        "explanation": "`kubeadm init` is used to initialize a Kubernetes cluster."
    },
    {
        "question": "Which tool is used for container networking in Kubernetes?",
        "options": [
            "CNI",
            "Calico",
            "Weave",
            "All of the above"
        ],
        "correct_option_id": 3,
        "explanation": "Kubernetes supports multiple container networking plugins through CNI, including Calico and Weave."
    },
    {
        "question": "What is the purpose of Prometheus Alertmanager?",
        "options": [
            "To store metrics",
            "To visualize metrics",
            "To handle and route alerts generated by Prometheus",
            "To scrape metrics from endpoints"
        ],
        "correct_option_id": 2,
        "explanation": "Prometheus Alertmanager is responsible for handling alerts and routing them to the appropriate destinations."
    },
    {
        "question": "What does the `docker build` command do?",
        "options": [
            "Builds a new container",
            "Builds an image from a Dockerfile",
            "Builds persistent storage for containers",
            "Builds container orchestration"
        ],
        "correct_option_id": 1,
        "explanation": "`docker build` creates a new Docker image from a specified Dockerfile."
    },
    {
        "question": "What is the primary function of a Kubernetes `DaemonSet`?",
        "options": [
            "To manage stateful applications",
            "To ensure that a pod runs on every node in the cluster",
            "To scale pods horizontally",
            "To schedule jobs to run once"
        ],
        "correct_option_id": 1,
        "explanation": "A `DaemonSet` ensures that a copy of a specific pod runs on every node in the cluster."
    },
    {
        "question": "What does the `kubectl delete` command do?",
        "options": [
            "Deletes a Kubernetes cluster",
            "Deletes resources from a cluster",
            "Stops the Kubernetes API server",
            "Removes a namespace from the cluster"
        ],
        "correct_option_id": 1,
        "explanation": "`kubectl delete` removes specified resources from the Kubernetes cluster."
    },
    {
        "question": "What is the primary use of `ArgoCD`?",
        "options": [
            "To create Helm charts",
            "To perform GitOps for Kubernetes",
            "To monitor pod health",
            "To configure cluster networking"
        ],
        "correct_option_id": 1,
        "explanation": "ArgoCD is a GitOps tool used to deploy applications in Kubernetes based on Git repositories."
    },
    {
        "question": "What does the `terraform destroy` command do?",
        "options": [
            "Applies Terraform configurations",
            "Removes Terraform modules",
            "Deletes all infrastructure resources defined in the configuration",
            "Initializes a Terraform project"
        ],
        "correct_option_id": 2,
        "explanation": "`terraform destroy` removes all infrastructure resources defined in the configuration files."
    },
    {
        "question": "What is a Kubernetes `Job` used for?",
        "options": [
            "To manage stateful applications",
            "To run a task to completion",
            "To manage long-running services",
            "To manage network ingress"
        ],
        "correct_option_id": 1,
        "explanation": "A Kubernetes `Job` is used to create one or more pods that run a task to completion."
    },
    {
        "question": "Which of the following is an IaC tool?",
        "options": [
            "Terraform",
            "Jenkins",
            "Docker",
            "Prometheus"
        ],
        "correct_option_id": 0,
        "explanation": "Terraform is an Infrastructure as Code (IaC) tool for provisioning and managing cloud infrastructure."
    },
    {
        "question": "What is the role of `RBAC` in Kubernetes?",
        "options": [
            "To manage storage resources",
            "To control access to cluster resources",
            "To deploy container images",
            "To configure pod scheduling"
        ],
        "correct_option_id": 1,
        "explanation": "`RBAC` (Role-Based Access Control) is used to control access to cluster resources."
    },
    {
        "question": "What is the purpose of a `Secret` in Kubernetes?",
        "options": [
            "To store sensitive information like passwords or tokens",
            "To configure environment variables",
            "To expose services to the internet",
            "To manage pod replicas"
        ],
        "correct_option_id": 0,
        "explanation": "A `Secret` is used to store sensitive information such as passwords, tokens, or keys in Kubernetes."
    },
    {
        "question": "Which Kubernetes object is used to expose an application as a network service?",
        "options": [
            "Pod",
            "Service",
            "ReplicaSet",
            "Deployment"
        ],
        "correct_option_id": 1,
        "explanation": "A `Service` in Kubernetes is used to expose an application as a network service."
    },
    {
        "question": "What is the function of `kubectl logs`?",
        "options": [
            "To view the logs of a pod",
            "To create logs for a deployment",
            "To delete logs in a pod",
            "To scale pods in a deployment"
        ],
        "correct_option_id": 0,
        "explanation": "`kubectl logs` is used to view the logs of a pod in Kubernetes."
    },
    {
        "question": "Which tool is commonly used for monitoring Kubernetes clusters?",
        "options": [
            "Jenkins",
            "Terraform",
            "Prometheus",
            "Docker"
        ],
        "correct_option_id": 2,
        "explanation": "Prometheus is commonly used for monitoring Kubernetes clusters and collecting metrics."
    },
    {
        "question": "What is the purpose of a `NetworkPolicy` in Kubernetes?",
        "options": [
            "To manage pod-to-pod network traffic",
            "To configure external ingress rules",
            "To scale pods horizontally",
            "To create persistent volumes"
        ],
        "correct_option_id": 0,
        "explanation": "A `NetworkPolicy` in Kubernetes is used to control pod-to-pod and pod-to-external network traffic."
    },
    {
        "question": "What is the default scheduler in Kubernetes?",
        "options": [
            "kube-scheduler",
            "kube-controller",
            "kube-proxy",
            "kubelet"
        ],
        "correct_option_id": 0,
        "explanation": "`kube-scheduler` is the default scheduler that assigns pods to nodes in Kubernetes."
    },
    {
        "question": "What is the primary purpose of the `Etcd` component in a Kubernetes cluster?",
        "options": [
            "To manage pod scheduling",
            "To act as the cluster's key-value store for all configuration data",
            "To monitor the health of nodes",
            "To provide persistent storage for pods"
        ],
        "correct_option_id": 1,
        "explanation": "`Etcd` is a distributed key-value store used by Kubernetes to store all cluster configuration data."
    },
    {
        "question": "Which of the following is true about `PodDisruptionBudget` (PDB) in Kubernetes?",
        "options": [
            "It ensures pods are evenly distributed across nodes",
            "It limits the number of voluntary disruptions to a specified number of pods",
            "It provides automatic scaling based on CPU usage",
            "It manages inter-pod network policies"
        ],
        "correct_option_id": 1,
        "explanation": "A `PodDisruptionBudget` limits the number of pods that can be voluntarily disrupted during maintenance or updates."
    },
    {
        "question": "In Kubernetes, which resource can be used to enforce memory and CPU limits for all pods in a namespace?",
        "options": [
            "LimitRange",
            "ResourceQuota",
            "PodPreset",
            "AdmissionController"
        ],
        "correct_option_id": 1,
        "explanation": "`ResourceQuota` is used to enforce memory and CPU limits at the namespace level."
    },
    {
        "question": "What does the `helm dependency update` command do in Helm?",
        "options": [
            "Installs Helm charts",
            "Updates dependencies defined in the `Chart.yaml` file",
            "Rolls back a Helm release",
            "Deletes outdated Helm charts"
        ],
        "correct_option_id": 1,
        "explanation": "`helm dependency update` downloads and updates chart dependencies specified in the `Chart.yaml` file."
    },
    {
        "question": "Which Kubernetes admission controller is used to prevent pods from running as the root user?",
        "options": [
            "PodSecurityPolicy",
            "ResourceQuota",
            "NamespaceLifecycle",
            "NodeRestriction"
        ],
        "correct_option_id": 0,
        "explanation": "The `PodSecurityPolicy` admission controller prevents pods from running as root by enforcing security policies."
    },
    {
        "question": "What is the purpose of `kube-proxy` in a Kubernetes cluster?",
        "options": [
            "To route traffic within the cluster",
            "To provide persistent storage",
            "To monitor resource usage",
            "To manage pod deployments"
        ],
        "correct_option_id": 0,
        "explanation": "`kube-proxy` is responsible for routing traffic and managing network rules within the cluster."
    },
    {
        "question": "What is the primary difference between a `StatefulSet` and a `Deployment` in Kubernetes?",
        "options": [
            "`StatefulSet` is used for stateless applications, while `Deployment` is for stateful applications.",
            "`StatefulSet` ensures stable network identity and storage, while `Deployment` does not.",
            "`StatefulSet` scales automatically, while `Deployment` does not.",
            "`StatefulSet` is only used with Jobs, while `Deployment` is not."
        ],
        "correct_option_id": 1,
        "explanation": "`StatefulSet` ensures stable network identities and persistent storage, making it ideal for stateful applications, while `Deployment` does not."
    },
    {
        "question": "What is the default behavior of Kubernetes when a node becomes unreachable?",
        "options": [
            "All pods on the node are immediately deleted",
            "Pods are rescheduled to other nodes after the grace period",
            "The node is restarted automatically",
            "The cluster shuts down all workloads"
        ],
        "correct_option_id": 1,
        "explanation": "When a node becomes unreachable, pods are rescheduled to other nodes after a default grace period (usually 5 minutes)."
    },
    {
        "question": "Which protocol is used by the `kube-scheduler` to assign pods to nodes?",
        "options": [
            "HTTP",
            "HTTPS",
            "gRPC",
            "None"
        ],
        "correct_option_id": 3,
        "explanation": "`kube-scheduler` does not use a protocol to assign pods; it interacts with the API server to place pods on nodes."
    },
    {
        "question": "What is the purpose of the `Terraform state` file?",
        "options": [
            "To track the history of applied configurations",
            "To store the current state of infrastructure managed by Terraform",
            "To monitor Terraform module dependencies",
            "To manage provider plugins"
        ],
        "correct_option_id": 1,
        "explanation": "The Terraform state file keeps track of the current state of the infrastructure, enabling efficient updates and management."
    },
    {
        "question": "Which Kubernetes component implements the `Control Plane`?",
        "options": [
            "kubelet and kube-proxy",
            "kube-apiserver, kube-scheduler, and controller-manager",
            "kube-apiserver and etcd only",
            "kubectl and kube-scheduler"
        ],
        "correct_option_id": 1,
        "explanation": "The Kubernetes Control Plane consists of components such as `kube-apiserver`, `kube-scheduler`, and `controller-manager`."
    },
    {
        "question": "What does the `docker-compose down` command do?",
        "options": [
            "Builds and starts all services",
            "Stops and removes containers, networks, and volumes created by `docker-compose up`",
            "Removes unused Docker images",
            "Only stops running containers"
        ],
        "correct_option_id": 1,
        "explanation": "`docker-compose down` stops and removes all resources created by `docker-compose up`."
    },
    {
        "question": "What is the difference between `DaemonSet` and `Deployment` in Kubernetes?",
        "options": [
            "`DaemonSet` ensures one pod per node, while `Deployment` manages replicas.",
            "`DaemonSet` handles stateless apps, while `Deployment` handles stateful apps.",
            "`DaemonSet` is used for managing Helm charts, while `Deployment` is not.",
            "`DaemonSet` scales pods horizontally, while `Deployment` does not."
        ],
        "correct_option_id": 0,
        "explanation": "`DaemonSet` ensures one pod runs on every node, while `Deployment` manages replicas for scaling."
    },
    {
        "question": "What is the primary benefit of using `GitOps` in DevOps workflows?",
        "options": [
            "Faster deployment speeds",
            "Version-controlled infrastructure and automated deployments",
            "Simplified logging and monitoring",
            "Centralized access control"
        ],
        "correct_option_id": 1,
        "explanation": "GitOps enables version-controlled infrastructure and automated deployments by syncing with Git repositories."
    },
    {
        "question": "What is the function of a `canary deployment` strategy?",
        "options": [
            "To deploy all features simultaneously",
            "To gradually release changes to a subset of users",
            "To roll back a deployment automatically",
            "To run the deployment across multiple clusters simultaneously"
        ],
        "correct_option_id": 1,
        "explanation": "Canary deployment releases changes incrementally to a small subset of users before a full rollout."
    },
    {
        "question": "In Kubernetes, what is the `terminationGracePeriodSeconds` parameter?",
        "options": [
            "The time a pod waits before being deleted",
            "The time given to a pod to handle SIGTERM before shutdown",
            "The delay in creating a pod after deployment",
            "The time taken by the cluster to reschedule pods"
        ],
        "correct_option_id": 1,
        "explanation": "`terminationGracePeriodSeconds` allows pods to gracefully handle termination signals (SIGTERM) before being forcefully shut down."
    },
    {
        "question": "What is a `CRD` in Kubernetes?",
        "options": [
            "Custom Resource Definition",
            "Cluster Resource Deployment",
            "Custom Role Directory",
            "Control Resource Domain"
        ],
        "correct_option_id": 0,
        "explanation": "A `Custom Resource Definition (CRD)` allows you to define custom objects in Kubernetes."
    },
    {
        "question": "Which tool allows the creation of immutable infrastructure?",
        "options": [
            "Ansible",
            "Terraform",
            "Puppet",
            "Chef"
        ],
        "correct_option_id": 1,
        "explanation": "Terraform is commonly used to create immutable infrastructure through declarative configuration files."
    },
    {
        "question": "Which Kubernetes resource supports the use of affinity and anti-affinity rules?",
        "options": [
            "Pod",
            "Service",
            "ConfigMap",
            "PersistentVolume"
        ],
        "correct_option_id": 0,
        "explanation": "Affinity and anti-affinity rules are defined at the pod level to control scheduling preferences."
    },
    {
        "question": "What is the main purpose of the `istio-sidecar` container?",
        "options": [
            "To manage cluster nodes",
            "To enforce policies and collect telemetry in a service mesh",
            "To provide persistent storage",
            "To schedule pods on nodes"
        ],
        "correct_option_id": 1,
        "explanation": "The Istio sidecar container enforces policies and collects telemetry for service mesh management."
    },
    {
        "question": "What is the default port used by the Kubernetes API server for secure communication?",
        "options": [
            "6443",
            "8080",
            "2379",
            "10250"
        ],
        "correct_option_id": 0,
        "explanation": "The Kubernetes API server communicates over port 6443 by default for secure HTTPS connections."
    },
    {
        "question": "What is the role of `kube-proxy` in Kubernetes networking?",
        "options": [
            "To route incoming traffic to the appropriate node",
            "To manage IP address allocation for pods",
            "To maintain network rules for communication between pods and services",
            "To monitor network usage"
        ],
        "correct_option_id": 2,
        "explanation": "`kube-proxy` manages networking rules to enable communication between pods and services."
    },
    {
        "question": "Which Kubernetes resource is primarily used to control pod-to-pod network traffic?",
        "options": [
            "Ingress",
            "NetworkPolicy",
            "Service",
            "ConfigMap"
        ],
        "correct_option_id": 1,
        "explanation": "A `NetworkPolicy` is used to define and control allowed network traffic between pods."
    },
    {
        "question": "What is the role of a CNI (Container Network Interface) plugin in Kubernetes?",
        "options": [
            "To enable container runtime support",
            "To provide network connectivity to containers",
            "To configure storage volumes for pods",
            "To manage Kubernetes namespaces"
        ],
        "correct_option_id": 1,
        "explanation": "A CNI plugin provides network connectivity to containers and configures network interfaces."
    },
    {
        "question": "What is the primary function of an `Ingress` in Kubernetes?",
        "options": [
            "To route external traffic to Kubernetes services",
            "To expose pods directly to the internet",
            "To configure persistent storage for pods",
            "To define pod-to-pod network rules"
        ],
        "correct_option_id": 0,
        "explanation": "`Ingress` resources define rules for routing external HTTP/HTTPS traffic to Kubernetes services."
    },
    {
        "question": "Which tool is commonly used to implement service mesh in Kubernetes?",
        "options": [
            "Calico",
            "Weave",
            "Istio",
            "Flannel"
        ],
        "correct_option_id": 2,
        "explanation": "Istio is a popular service mesh tool for managing service-to-service communication in Kubernetes."
    },
    {
        "question": "What is the default DNS service used in Kubernetes clusters?",
        "options": [
            "CoreDNS",
            "BindDNS",
            "KubeDNS",
            "ConsulDNS"
        ],
        "correct_option_id": 0,
        "explanation": "`CoreDNS` is the default DNS service used in Kubernetes for service discovery."
    },
    {
        "question": "What is the purpose of the `ClusterIP` service type in Kubernetes?",
        "options": [
            "To expose services externally using a fixed IP",
            "To provide internal cluster-only access to services",
            "To load balance traffic across multiple clusters",
            "To allocate static IPs to nodes"
        ],
        "correct_option_id": 1,
        "explanation": "`ClusterIP` services provide internal-only access within the Kubernetes cluster."
    },
    {
        "question": "Which component in Kubernetes ensures pods can communicate across nodes?",
        "options": [
            "Ingress",
            "kube-proxy",
            "CNI plugin",
            "DNS service"
        ],
        "correct_option_id": 2,
        "explanation": "CNI plugins such as Calico and Flannel ensure pods can communicate across nodes by implementing network overlays."
    },
    {
        "question": "What is the function of the `ExternalName` service type in Kubernetes?",
        "options": [
            "To route traffic between namespaces",
            "To expose a service using a domain name instead of a ClusterIP",
            "To enable external traffic to access cluster pods",
            "To allocate a static IP to a service"
        ],
        "correct_option_id": 1,
        "explanation": "`ExternalName` maps a Kubernetes service to an external domain name."
    },
    {
        "question": "What does the `iptables` utility do in a Kubernetes cluster?",
        "options": [
            "Manages pod replication",
            "Handles routing and network traffic rules on nodes",
            "Configures DNS for services",
            "Sets up cluster roles for networking"
        ],
        "correct_option_id": 1,
        "explanation": "`iptables` manages routing and network rules, which are used by `kube-proxy` for service networking."
    },
    {
        "question": "Which of the following is a valid Kubernetes service discovery mechanism?",
        "options": [
            "Environment variables",
            "DNS-based service names",
            "Both A and B",
            "Neither A nor B"
        ],
        "correct_option_id": 2,
        "explanation": "Kubernetes supports service discovery using both environment variables and DNS-based service names."
    },
    {
        "question": "What does the `NodePort` service type do in Kubernetes?",
        "options": [
            "Exposes a service to be accessible externally via a high port on each node",
            "Enables direct pod-to-pod communication across namespaces",
            "Provides a static IP for external traffic",
            "Creates an internal load balancer"
        ],
        "correct_option_id": 0,
        "explanation": "A `NodePort` exposes a service on a specific port on all nodes, making it accessible externally."
    },
    {
        "question": "Which command retrieves the IP addresses of all services in a Kubernetes namespace?",
        "options": [
            "`kubectl get pods`",
            "`kubectl get services`",
            "`kubectl describe nodes`",
            "`kubectl get ingress`"
        ],
        "correct_option_id": 1,
        "explanation": "`kubectl get services` provides details including the ClusterIP of services in the namespace."
    },
    {
        "question": "What is the purpose of the `serviceAccount` in Kubernetes?",
        "options": [
            "To provide network access to services",
            "To grant pods access to the API server",
            "To configure ingress rules",
            "To manage CNI plugins"
        ],
        "correct_option_id": 1,
        "explanation": "`serviceAccount` provides authentication for pods to interact with the Kubernetes API server."
    },
    {
        "question": "Which Kubernetes networking model ensures every pod has a unique IP?",
        "options": [
            "Shared networking model",
            "Flat networking model",
            "IP-per-pod model",
            "Node-port networking model"
        ],
        "correct_option_id": 2,
        "explanation": "Kubernetes adopts an `IP-per-pod` model where each pod gets a unique IP, enabling direct communication."
    },
    {
        "question": "What is the role of the `Egress` resource in Kubernetes networking?",
        "options": [
            "To define outbound network traffic rules",
            "To expose services to the internet",
            "To manage pod-to-pod communication",
            "To enforce DNS policies"
        ],
        "correct_option_id": 0,
        "explanation": "`Egress` defines rules for controlling outbound traffic from pods in a Kubernetes cluster."
    },
    {
        "question": "Which of the following CNI plugins supports BGP for network routing in Kubernetes?",
        "options": [
            "Flannel",
            "Calico",
            "Weave Net",
            "Cilium"
        ],
        "correct_option_id": 1,
        "explanation": "Calico supports BGP (Border Gateway Protocol) for advanced network routing in Kubernetes."
    },
    {
        "question": "What does the `kubectl port-forward` command do?",
        "options": [
            "Creates a NodePort service",
            "Exposes a pod's port to the local machine for debugging",
            "Configures ingress rules for services",
            "Redirects traffic between namespaces"
        ],
        "correct_option_id": 1,
        "explanation": "`kubectl port-forward` allows you to forward a port from a pod to your local machine for testing or debugging."
    },
    {
        "question": "What is the function of a `Service Mesh` in Kubernetes?",
        "options": [
            "To manage ingress and egress traffic",
            "To provide observability, security, and traffic management for service-to-service communication",
            "To allocate IP addresses to pods",
            "To control DNS-based service discovery"
        ],
        "correct_option_id": 1,
        "explanation": "A Service Mesh like Istio or Linkerd handles observability, security, and advanced traffic management for service communication."
    },
    {
        "question": "What is `Cilium` primarily used for in Kubernetes?",
        "options": [
            "To provide BGP routing",
            "To implement networking and security with eBPF",
            "To monitor resource usage",
            "To manage persistent storage"
        ],
        "correct_option_id": 1,
        "explanation": "`Cilium` uses eBPF for high-performance networking and advanced security in Kubernetes clusters."
    },
    {
        "question": "Which command is used to display the current routing table in Linux?",
        "options": [
            "ip route",
            "netstat -r",
            "route",
            "All of the above"
        ],
        "correct_option_id": 3,
        "explanation": "All listed commands (`ip route`, `netstat -r`, and `route`) can display the Linux routing table."
    },
    {
        "question": "What is the default port for SSH in Linux?",
        "options": [
            "20",
            "21",
            "22",
            "23"
        ],
        "correct_option_id": 2,
        "explanation": "SSH uses port 22 by default for secure shell access."
    },
    {
        "question": "Which of the following tools is used to monitor network packets in real time on Linux?",
        "options": [
            "tcpdump",
            "iftop",
            "nload",
            "All of the above"
        ],
        "correct_option_id": 3,
        "explanation": "Tools like `tcpdump`, `iftop`, and `nload` are used for real-time network monitoring."
    },
    {
        "question": "What is the purpose of the `/etc/hosts` file in Linux?",
        "options": [
            "To configure network interfaces",
            "To map hostnames to IP addresses locally",
            "To set DNS server addresses",
            "To enable firewall rules"
        ],
        "correct_option_id": 1,
        "explanation": "The `/etc/hosts` file maps hostnames to IP addresses locally for name resolution."
    },
    {
        "question": "Which protocol is primarily used for transferring web pages?",
        "options": [
            "FTP",
            "HTTP",
            "SMTP",
            "SNMP"
        ],
        "correct_option_id": 1,
        "explanation": "HTTP (Hypertext Transfer Protocol) is used to transfer web pages."
    },
    {
        "question": "What is the purpose of the `iptables` command in Linux?",
        "options": [
            "To monitor network traffic",
            "To configure firewall rules",
            "To manage DNS records",
            "To establish VPN connections"
        ],
        "correct_option_id": 1,
        "explanation": "`iptables` is used to configure firewall rules and manage packet filtering in Linux."
    },
    {
        "question": "Which of the following commands is used to display all open network connections in Linux?",
        "options": [
            "netstat",
            "ss",
            "lsof",
            "All of the above"
        ],
        "correct_option_id": 3,
        "explanation": "Commands like `netstat`, `ss`, and `lsof` can display open network connections."
    },
    {
        "question": "Which Linux command is used to configure network interfaces?",
        "options": [
            "ifconfig",
            "ip addr",
            "nmcli",
            "All of the above"
        ],
        "correct_option_id": 3,
        "explanation": "`ifconfig`, `ip addr`, and `nmcli` are commonly used to configure network interfaces."
    },
    {
        "question": "What is the primary purpose of the `traceroute` command in Linux?",
        "options": [
            "To test connectivity to a remote host",
            "To display the path packets take to reach a host",
            "To configure routing rules",
            "To capture network packets"
        ],
        "correct_option_id": 1,
        "explanation": "`traceroute` displays the path packets take to reach a remote host."
    },
    {
        "question": "Which of the following protocols is used for email transmission?",
        "options": [
            "SMTP",
            "IMAP",
            "POP3",
            "All of the above"
        ],
        "correct_option_id": 3,
        "explanation": "Protocols like SMTP, IMAP, and POP3 are used for email transmission and retrieval."
    },
    {
        "question": "What is the default network interface name for Ethernet in modern Linux systems?",
        "options": [
            "eth0",
            "ens33",
            "enp0s3",
            "It depends on the system"
        ],
        "correct_option_id": 3,
        "explanation": "Modern Linux systems use predictable names like `ens33` or `enp0s3`, depending on hardware."
    },
    {
        "question": "What is the primary purpose of the `ping` command?",
        "options": [
            "To test the DNS resolution",
            "To check network connectivity between hosts",
            "To display network interface statistics",
            "To trace packet routes"
        ],
        "correct_option_id": 1,
        "explanation": "`ping` checks network connectivity by sending ICMP echo requests to a target host."
    },
    {
        "question": "Which of the following is NOT a valid DNS record type?",
        "options": [
            "A",
            "MX",
            "TXT",
            "PNS"
        ],
        "correct_option_id": 3,
        "explanation": "`PNS` is not a valid DNS record type. Valid types include A, MX, and TXT."
    },
    {
        "question": "Which protocol is used to securely transfer files over the internet?",
        "options": [
            "FTP",
            "SFTP",
            "HTTP",
            "Telnet"
        ],
        "correct_option_id": 1,
        "explanation": "SFTP (Secure File Transfer Protocol) is used to securely transfer files over the internet."
    },
    {
        "question": "Which command is used to display the IP address and subnet mask of a network interface in Linux?",
        "options": [
            "ifconfig",
            "ip addr",
            "nmcli dev show",
            "All of the above"
        ],
        "correct_option_id": 3,
        "explanation": "`ifconfig`, `ip addr`, and `nmcli dev show` can display IP address and subnet mask information."
    },
    {
        "question": "What does the `netstat -tuln` command display?",
        "options": [
            "Open network sockets",
            "Active TCP and UDP listening ports",
            "Active DNS queries",
            "Routing table entries"
        ],
        "correct_option_id": 1,
        "explanation": "`netstat -tuln` displays active TCP and UDP listening ports in numerical format."
    },
    {
        "question": "Which Linux utility is used to manage advanced routing rules?",
        "options": [
            "iptables",
            "tc",
            "ip rule",
            "All of the above"
        ],
        "correct_option_id": 3,
        "explanation": "Tools like `iptables`, `tc`, and `ip rule` are used to manage advanced routing and traffic control."
    },
    {
        "question": "What is the purpose of the `arp` command in Linux?",
        "options": [
            "To manage DNS entries",
            "To display or modify the ARP table",
            "To monitor IP traffic",
            "To manage routing protocols"
        ],
        "correct_option_id": 1,
        "explanation": "The `arp` command is used to view or modify the Address Resolution Protocol (ARP) table."
    },
    {
        "question": "What is the default location of the DNS resolver configuration file in Linux?",
        "options": [
            "/etc/hosts",
            "/etc/resolv.conf",
            "/etc/network/interfaces",
            "/etc/dns.conf"
        ],
        "correct_option_id": 1,
        "explanation": "The `/etc/resolv.conf` file contains DNS resolver configuration settings in Linux."
    },
    {
        "question": "Which tool can generate ICMP packets for network testing?",
        "options": [
            "ping",
            "hping3",
            "traceroute",
            "All of the above"
        ],
        "correct_option_id": 3,
        "explanation": "Tools like `ping`, `hping3`, and `traceroute` generate ICMP packets for network testing."
    },
    {
        "question": "What is the function of the `ethtool` command in Linux?",
        "options": [
            "To configure firewall rules",
            "To monitor and configure Ethernet devices",
            "To display routing information",
            "To test network connectivity"
        ],
        "correct_option_id": 1,
        "explanation": "`ethtool` is used to configure and diagnose Ethernet devices in Linux."
    },
    {
        "question": "What is the role of the `bridge` command in Linux?",
        "options": [
            "To configure network bridges",
            "To set up VPN connections",
            "To route traffic between subnets",
            "To view DNS configurations"
        ],
        "correct_option_id": 0,
        "explanation": "The `bridge` command is used to configure network bridges in Linux."
    },
    {
        "question": "Which command shows active connections and the program using them?",
        "options": [
            "lsof -i",
            "ss -tulpn",
            "netstat -p",
            "All of the above"
        ],
        "correct_option_id": 3,
        "explanation": "Commands like `lsof -i`, `ss -tulpn`, and `netstat -p` can show active connections and the associated programs."
    },
    {
        "question": "What is the purpose of a virtual IP in Linux networking?",
        "options": [
            "To provide redundancy and high availability",
            "To manage VLANs",
            "To enable IP masquerading",
            "To configure dynamic routing"
        ],
        "correct_option_id": 0,
        "explanation": "Virtual IPs are commonly used in clustering setups for redundancy and high availability."
    },
    {
        "question": "Which AWS service is used to manage containerized applications?",
        "options": [
            "Amazon ECS",
            "AWS Lambda",
            "Amazon RDS",
            "Amazon S3"
        ],
        "correct_option_id": 0,
        "explanation": "Amazon Elastic Container Service (ECS) is used to manage containerized applications."
    },
    {
        "question": "In Azure, what is the equivalent of AWS S3 for object storage?",
        "options": [
            "Azure Blob Storage",
            "Azure File Storage",
            "Azure Table Storage",
            "Azure Queue Storage"
        ],
        "correct_option_id": 0,
        "explanation": "Azure Blob Storage is the equivalent of AWS S3 and is used for object storage in Azure."
    },
    {
        "question": "What is the purpose of Google Cloud Pub/Sub?",
        "options": [
            "To manage APIs",
            "To provide messaging between services",
            "To store relational data",
            "To monitor application performance"
        ],
        "correct_option_id": 1,
        "explanation": "Google Cloud Pub/Sub is a messaging service for communication between distributed systems."
    },
    {
        "question": "Which AWS service is designed for building serverless applications?",
        "options": [
            "AWS Lambda",
            "Amazon EC2",
            "Amazon EKS",
            "AWS Batch"
        ],
        "correct_option_id": 0,
        "explanation": "AWS Lambda is a serverless compute service that lets you run code without provisioning servers."
    },
    {
        "question": "In GCP, which service is used to manage Kubernetes clusters?",
        "options": [
            "Google Kubernetes Engine (GKE)",
            "Compute Engine",
            "Cloud Functions",
            "Cloud Run"
        ],
        "correct_option_id": 0,
        "explanation": "Google Kubernetes Engine (GKE) is a managed Kubernetes service in Google Cloud."
    },
    {
        "question": "What is the purpose of Azure Resource Manager (ARM)?",
        "options": [
            "To deploy and manage Azure resources",
            "To create virtual machines",
            "To set up Azure AD",
            "To configure storage accounts"
        ],
        "correct_option_id": 0,
        "explanation": "Azure Resource Manager (ARM) is the deployment and management service for Azure resources."
    },
    {
        "question": "Which AWS service provides a fully managed NoSQL database?",
        "options": [
            "Amazon RDS",
            "Amazon Redshift",
            "Amazon DynamoDB",
            "Amazon Aurora"
        ],
        "correct_option_id": 2,
        "explanation": "Amazon DynamoDB is a fully managed NoSQL database service."
    },
    {
        "question": "In GCP, which service is used for monitoring and logging?",
        "options": [
            "Stackdriver",
            "Cloud Logging",
            "Cloud Monitoring",
            "All of the above"
        ],
        "correct_option_id": 3,
        "explanation": "Stackdriver integrates Cloud Logging and Cloud Monitoring for observability in Google Cloud."
    },
    {
        "question": "Which Azure service is used for distributed, scalable event streaming?",
        "options": [
            "Event Grid",
            "Event Hub",
            "Service Bus",
            "Notification Hubs"
        ],
        "correct_option_id": 1,
        "explanation": "Azure Event Hub is used for distributed, scalable event streaming."
    },
    {
        "question": "What is the main use of Amazon Route 53?",
        "options": [
            "Content delivery",
            "Domain Name System (DNS) and routing",
            "Load balancing",
            "Database management"
        ],
        "correct_option_id": 1,
        "explanation": "Amazon Route 53 is used for DNS and routing web traffic."
    },
    {
        "question": "What does Azure Cosmos DB offer?",
        "options": [
            "Relational database services",
            "Globally distributed, multi-model database services",
            "On-premises data integration",
            "Database backups"
        ],
        "correct_option_id": 1,
        "explanation": "Azure Cosmos DB is a globally distributed, multi-model database service."
    },
    {
        "question": "What is the role of Amazon CloudFront?",
        "options": [
            "To host static websites",
            "To deliver content with low latency using edge locations",
            "To store large-scale data",
            "To manage API requests"
        ],
        "correct_option_id": 1,
        "explanation": "Amazon CloudFront is a content delivery network (CDN) for low-latency content delivery."
    },
    {
        "question": "Which GCP service is used for serverless application hosting?",
        "options": [
            "Cloud Functions",
            "Compute Engine",
            "App Engine",
            "Cloud Run"
        ],
        "correct_option_id": 2,
        "explanation": "Google App Engine is a fully managed platform for building serverless applications."
    },
    {
        "question": "Which Azure service provides serverless workflows and orchestration?",
        "options": [
            "Logic Apps",
            "Azure Functions",
            "App Service",
            "Azure DevOps"
        ],
        "correct_option_id": 0,
        "explanation": "Azure Logic Apps enable serverless workflows and orchestration in Azure."
    },
    {
        "question": "What is the primary function of AWS Elastic Load Balancer (ELB)?",
        "options": [
            "To handle asynchronous messaging",
            "To distribute incoming traffic across multiple instances",
            "To provide disaster recovery",
            "To monitor application health"
        ],
        "correct_option_id": 1,
        "explanation": "AWS Elastic Load Balancer (ELB) distributes incoming traffic across instances for better fault tolerance."
    },
    {
        "question": "What is the purpose of Azure Traffic Manager?",
        "options": [
            "To manage traffic within Azure VMs",
            "To route traffic globally across multiple regions",
            "To handle API requests",
            "To secure network connections"
        ],
        "correct_option_id": 1,
        "explanation": "Azure Traffic Manager routes traffic globally to optimize performance and availability."
    },
    {
        "question": "Which AWS service provides a managed distributed in-memory caching system?",
        "options": [
            "Amazon RDS",
            "ElastiCache",
            "Amazon Aurora",
            "DynamoDB Accelerator (DAX)"
        ],
        "correct_option_id": 1,
        "explanation": "Amazon ElastiCache provides managed in-memory caching using Redis or Memcached."
    },
    {
        "question": "In GCP, which storage class is designed for infrequently accessed data?",
        "options": [
            "Multi-Regional",
            "Regional",
            "Coldline",
            "Nearline"
        ],
        "correct_option_id": 3,
        "explanation": "Nearline storage in GCP is optimized for infrequently accessed data."
    },
    {
        "question": "What does AWS IAM stand for?",
        "options": [
            "Infrastructure Access Management",
            "Identity and Access Management",
            "Internet and Application Management",
            "Instance Authorization Management"
        ],
        "correct_option_id": 1,
        "explanation": "AWS IAM (Identity and Access Management) enables secure access control for AWS services and resources."
    },
    {
        "question": "Which GCP service allows running containers without managing servers?",
        "options": [
            "Google Kubernetes Engine",
            "Cloud Run",
            "App Engine",
            "Compute Engine"
        ],
        "correct_option_id": 1,
        "explanation": "Cloud Run is a fully managed service to run containers without managing infrastructure."
    },
    {
        "question": "What is Azure Virtual Network (VNet) used for?",
        "options": [
            "To create isolated network environments",
            "To store virtual machine backups",
            "To manage API requests",
            "To host serverless applications"
        ],
        "correct_option_id": 0,
        "explanation": "Azure VNet is used to create isolated and secure network environments in Azure."
    },
    {
        "question": "Which AWS service provides on-demand analytics for big data?",
        "options": [
            "Amazon Athena",
            "Amazon Redshift",
            "Amazon EMR",
            "All of the above"
        ],
        "correct_option_id": 3,
        "explanation": "Services like Amazon Athena, Redshift, and EMR provide analytics capabilities for big data."
    },
    {
        "question": "Which Azure service provides a managed Kubernetes environment?",
        "options": [
            "Azure Kubernetes Service (AKS)",
            "Azure Container Instances",
            "Azure Batch",
            "Azure DevOps"
        ],
        "correct_option_id": 0,
        "explanation": "Azure Kubernetes Service (AKS) provides a fully managed Kubernetes environment."
    },
    {
        "question": "Which GCP service is used for data warehousing?",
        "options": [
            "BigQuery",
            "Dataflow",
            "Dataproc",
            "Cloud SQL"
        ],
        "correct_option_id": 0,
        "explanation": "BigQuery is Google Cloud's serverless data warehousing solution."
    },
    {
        "question": "What is AWS CloudFormation used for?",
        "options": [
            "To automate application deployments",
            "To monitor infrastructure",
            "To define infrastructure as code",
            "To build serverless APIs"
        ],
        "correct_option_id": 2,
        "explanation": "AWS CloudFormation allows you to define and provision infrastructure as code."
    },
    {
        "question": "What is the primary purpose of the Secure Shell (SSH) protocol?",
        "options": [
            "Encrypting web traffic",
            "Providing a secure channel for remote login",
            "Configuring network devices",
            "Managing certificates"
        ],
        "correct_option_id": 1,
        "explanation": "SSH is used to securely log in to remote systems and manage them over a secure channel."
    },
    {
        "question": "What does a firewall primarily do in a security architecture?",
        "options": [
            "Encrypt sensitive data",
            "Control and monitor incoming and outgoing network traffic",
            "Manage identity and access",
            "Detect and respond to malware"
        ],
        "correct_option_id": 1,
        "explanation": "Firewalls control and monitor traffic based on predefined security rules."
    },
    {
        "question": "Which tool is commonly used for penetration testing?",
        "options": [
            "Nmap",
            "Wireshark",
            "Metasploit",
            "All of the above"
        ],
        "correct_option_id": 3,
        "explanation": "Tools like Nmap, Wireshark, and Metasploit are widely used in penetration testing."
    },
    {
        "question": "What is the purpose of a TLS certificate?",
        "options": [
            "To encrypt emails",
            "To verify the identity of a website and secure data transfer",
            "To authenticate users",
            "To prevent SQL injection"
        ],
        "correct_option_id": 1,
        "explanation": "TLS certificates are used to secure communications and verify the identity of websites."
    },
    {
        "question": "Which type of attack involves intercepting and altering communication between two parties?",
        "options": [
            "SQL Injection",
            "Cross-Site Scripting (XSS)",
            "Man-in-the-Middle (MITM)",
            "Denial of Service (DoS)"
        ],
        "correct_option_id": 2,
        "explanation": "A MITM attack intercepts and potentially alters communications between two parties."
    },
    {
        "question": "What is the default hashing algorithm used by bcrypt?",
        "options": [
            "MD5",
            "SHA-1",
            "SHA-256",
            "Blowfish"
        ],
        "correct_option_id": 3,
        "explanation": "Bcrypt is based on the Blowfish cipher and is specifically designed for secure password hashing."
    },
    {
        "question": "Which Linux command can set file permissions to prevent unauthorized access?",
        "options": [
            "chmod",
            "chown",
            "passwd",
            "iptables"
        ],
        "correct_option_id": 0,
        "explanation": "The `chmod` command is used to change file permissions."
    },
    {
        "question": "What is the main purpose of multi-factor authentication (MFA)?",
        "options": [
            "To encrypt sensitive data",
            "To increase security by requiring multiple forms of verification",
            "To secure server connections",
            "To monitor network traffic"
        ],
        "correct_option_id": 1,
        "explanation": "MFA increases security by requiring multiple forms of verification, such as a password and a one-time code."
    },
    {
        "question": "What does a zero-day vulnerability refer to?",
        "options": [
            "A vulnerability with no known patch",
            "A vulnerability detected in antivirus software",
            "A weakness in secure passwords",
            "An exploit targeting outdated software"
        ],
        "correct_option_id": 0,
        "explanation": "A zero-day vulnerability is an undisclosed flaw with no patch available."
    },
    {
        "question": "Which protocol is used to encrypt emails?",
        "options": [
            "SMTP",
            "IMAP",
            "SSL/TLS",
            "PGP/GPG"
        ],
        "correct_option_id": 3,
        "explanation": "PGP/GPG encrypts emails to ensure privacy and authenticity."
    },
    {
        "question": "Which AWS service is used for managing encryption keys?",
        "options": [
            "AWS IAM",
            "AWS KMS",
            "Amazon S3",
            "AWS CloudTrail"
        ],
        "correct_option_id": 1,
        "explanation": "AWS Key Management Service (KMS) is used to manage encryption keys."
    },
    {
        "question": "What is the primary purpose of a VPN?",
        "options": [
            "To encrypt web traffic",
            "To provide secure remote access to a network",
            "To monitor data transfers",
            "To block malicious IP addresses"
        ],
        "correct_option_id": 1,
        "explanation": "VPNs provide secure remote access to a network by encrypting the connection."
    },
    {
        "question": "What does the principle of least privilege mean?",
        "options": [
            "Granting minimal access needed to perform a task",
            "Denying all access to non-admin users",
            "Encrypting all user data",
            "Logging all user activity"
        ],
        "correct_option_id": 0,
        "explanation": "The principle of least privilege ensures users have only the access necessary for their tasks."
    },
    {
        "question": "Which tool is commonly used for sniffing network packets?",
        "options": [
            "Wireshark",
            "Nmap",
            "Burp Suite",
            "Metasploit"
        ],
        "correct_option_id": 0,
        "explanation": "Wireshark is widely used for capturing and analyzing network packets."
    },
    {
        "question": "What is a common defense against SQL injection attacks?",
        "options": [
            "Using strong passwords",
            "Validating user input and using parameterized queries",
            "Encrypting the database",
            "Setting up firewalls"
        ],
        "correct_option_id": 1,
        "explanation": "Validating input and using parameterized queries prevents SQL injection attacks."
    },
    {
        "question": "What is the main function of a Web Application Firewall (WAF)?",
        "options": [
            "To block malicious traffic from reaching web applications",
            "To monitor network traffic",
            "To encrypt sensitive web data",
            "To optimize API performance"
        ],
        "correct_option_id": 0,
        "explanation": "A WAF protects web applications by filtering and monitoring HTTP traffic."
    },
    {
        "question": "Which command in Linux is used to encrypt files using GPG?",
        "options": [
            "gpg -c",
            "openssl enc",
            "encrypt -e",
            "crypttool"
        ],
        "correct_option_id": 0,
        "explanation": "`gpg -c` is used to encrypt files with GPG symmetric encryption."
    },
    {
        "question": "Which protocol is commonly used for directory services in enterprise environments?",
        "options": [
            "LDAP",
            "SNMP",
            "ICMP",
            "RADIUS"
        ],
        "correct_option_id": 0,
        "explanation": "LDAP (Lightweight Directory Access Protocol) is used for directory services in enterprises."
    },
    {
        "question": "What is the primary purpose of SELinux?",
        "options": [
            "To encrypt data",
            "To enforce access control policies",
            "To monitor network activity",
            "To configure DNS settings"
        ],
        "correct_option_id": 1,
        "explanation": "SELinux enforces access control policies to secure Linux systems."
    },
    {
        "question": "What is the role of a Security Information and Event Management (SIEM) system?",
        "options": [
            "To provide encryption services",
            "To monitor and analyze security events in real time",
            "To automate software updates",
            "To prevent phishing attacks"
        ],
        "correct_option_id": 1,
        "explanation": "SIEM systems monitor and analyze security events to detect and respond to threats."
    },
    {
        "question": "What is the purpose of hashing in security?",
        "options": [
            "To encrypt data for secure transmission",
            "To provide a unique fingerprint of data",
            "To compress large data files",
            "To monitor user activity"
        ],
        "correct_option_id": 1,
        "explanation": "Hashing generates a unique fingerprint of data for verification purposes."
    },
    {
        "question": "Which encryption method uses the same key for encryption and decryption?",
        "options": [
            "Asymmetric",
            "Symmetric",
            "Hybrid",
            "Elliptic Curve"
        ],
        "correct_option_id": 1,
        "explanation": "Symmetric encryption uses the same key for both encryption and decryption."
    },
    {
        "question": "What is the purpose of OWASP?",
        "options": [
            "To set standards for cloud security",
            "To provide best practices for application security",
            "To certify ethical hackers",
            "To monitor network traffic"
        ],
        "correct_option_id": 1,
        "explanation": "The OWASP foundation provides resources and best practices for application security."
    },
    {
        "question": "Which Linux tool is used for brute-force SSH attacks during penetration testing?",
        "options": [
            "Hydra",
            "John the Ripper",
            "Nmap",
            "Nikto"
        ],
        "correct_option_id": 0,
        "explanation": "Hydra is used for brute-force attacks, including SSH, during penetration testing."
    },
    {
        "question": "What is the primary purpose of a Business Continuity Plan (BCP)?",
        "options": [
            "To ensure regular backups",
            "To minimize the impact of disruptions and maintain operations",
            "To secure company assets",
            "To comply with regulatory requirements"
        ],
        "correct_option_id": 1,
        "explanation": "A BCP aims to minimize the impact of disruptions and ensure that critical business functions can continue."
    },
    {
        "question": "Which document outlines the specific steps to recover IT systems during a disaster?",
        "options": [
            "Incident Response Plan",
            "Disaster Recovery Plan",
            "Risk Management Plan",
            "Business Impact Analysis"
        ],
        "correct_option_id": 1,
        "explanation": "A Disaster Recovery Plan (DRP) details the steps to recover IT systems and infrastructure after a disaster."
    },
    {
        "question": "What does the RTO (Recovery Time Objective) specify in a disaster recovery context?",
        "options": [
            "The maximum data loss tolerated",
            "The acceptable downtime for a system or application",
            "The frequency of system backups",
            "The budget for disaster recovery efforts"
        ],
        "correct_option_id": 1,
        "explanation": "RTO specifies the maximum acceptable downtime before a system or application is restored."
    },
    {
        "question": "What is a key purpose of conducting a Business Impact Analysis (BIA)?",
        "options": [
            "To identify potential cyber threats",
            "To assess the impact of disruptions on critical business processes",
            "To determine legal compliance requirements",
            "To create an IT budget"
        ],
        "correct_option_id": 1,
        "explanation": "A BIA identifies the potential impact of disruptions on critical business processes and prioritizes recovery strategies."
    },
    {
        "question": "Which disaster recovery strategy involves running duplicate systems at an offsite location?",
        "options": [
            "Cold site",
            "Warm site",
            "Hot site",
            "Snapshot recovery"
        ],
        "correct_option_id": 2,
        "explanation": "A hot site is a fully operational duplicate of the primary site that can take over immediately in case of failure."
    },
    {
        "question": "What does the term 'Failover' refer to in a business continuity context?",
        "options": [
            "Switching to a backup system or component automatically",
            "Manually restarting operations after a disruption",
            "Testing recovery plans",
            "Documenting system failures"
        ],
        "correct_option_id": 0,
        "explanation": "Failover is the process of automatically switching to a backup system to maintain availability."
    },
    {
        "question": "Which of the following is NOT typically included in a Disaster Recovery Plan (DRP)?",
        "options": [
            "Contact information for key personnel",
            "Steps to resume critical IT systems",
            "Detailed marketing strategies",
            "Procedures for data restoration"
        ],
        "correct_option_id": 2,
        "explanation": "Marketing strategies are not typically part of a DRP, which focuses on IT and operational recovery."
    },
    {
        "question": "What is the purpose of an RPO (Recovery Point Objective)?",
        "options": [
            "To measure how long a system can be offline",
            "To determine the maximum acceptable data loss",
            "To identify key stakeholders",
            "To assess financial risks"
        ],
        "correct_option_id": 1,
        "explanation": "RPO specifies the maximum amount of data loss measured in time (e.g., 1 hour of lost data)."
    },
    {
        "question": "Which type of backup captures only the data that has changed since the last backup?",
        "options": [
            "Full backup",
            "Differential backup",
            "Incremental backup",
            "Snapshot backup"
        ],
        "correct_option_id": 2,
        "explanation": "Incremental backups capture only the data that has changed since the last backup, saving time and storage."
    },
    {
        "question": "Which ISO standard is specifically focused on Business Continuity Management?",
        "options": [
            "ISO 9001",
            "ISO 27001",
            "ISO 22301",
            "ISO 31000"
        ],
        "correct_option_id": 2,
        "explanation": "ISO 22301 is the standard for Business Continuity Management Systems (BCMS)."
    },
    {
        "question": "What is the primary goal of high availability (HA) systems?",
        "options": [
            "To reduce system performance",
            "To ensure continuous operation with minimal downtime",
            "To minimize power consumption",
            "To perform frequent backups"
        ],
        "correct_option_id": 1,
        "explanation": "High availability systems ensure that critical services remain operational with minimal downtime."
    },
    {
        "question": "Which of the following is an example of a preventive control in business continuity planning?",
        "options": [
            "Data encryption",
            "Fire suppression systems",
            "Regular backups",
            "Post-disaster drills"
        ],
        "correct_option_id": 1,
        "explanation": "Fire suppression systems are preventive controls designed to avoid disasters."
    },
    {
        "question": "What is the primary advantage of using cloud-based disaster recovery solutions?",
        "options": [
            "Unlimited storage capacity",
            "Automatic updates for all software",
            "Reduced costs and faster recovery times",
            "Increased physical security"
        ],
        "correct_option_id": 2,
        "explanation": "Cloud-based disaster recovery solutions offer cost-effective and scalable recovery options with reduced downtime."
    },
    {
        "question": "What is the main purpose of a tabletop exercise in business continuity planning?",
        "options": [
            "To perform a full-scale recovery test",
            "To simulate a scenario and discuss response strategies",
            "To deploy disaster recovery resources",
            "To update the risk register"
        ],
        "correct_option_id": 1,
        "explanation": "Tabletop exercises simulate scenarios in a discussion format to evaluate response strategies."
    },
    {
        "question": "What is a cold site in disaster recovery?",
        "options": [
            "A backup site that is fully operational at all times",
            "A site with minimal resources, requiring setup before use",
            "A site designed for warm weather",
            "A redundant power supply system"
        ],
        "correct_option_id": 1,
        "explanation": "A cold site has minimal resources and requires significant setup before it can be used."
    },
    {
        "question": "What is the purpose of data deduplication in backups?",
        "options": [
            "To increase data security",
            "To reduce storage requirements by eliminating duplicate data",
            "To speed up data recovery",
            "To compress data for faster transfers"
        ],
        "correct_option_id": 1,
        "explanation": "Data deduplication reduces storage needs by eliminating duplicate copies of data."
    },
    {
        "question": "What is the first step in creating a Business Continuity Plan?",
        "options": [
            "Testing the plan",
            "Identifying critical business processes",
            "Selecting backup solutions",
            "Implementing high availability systems"
        ],
        "correct_option_id": 1,
        "explanation": "Identifying critical business processes is the initial step to ensure the BCP addresses key priorities."
    },
    {
        "question": "Which cloud service model provides the highest level of control for disaster recovery?",
        "options": [
            "Infrastructure as a Service (IaaS)",
            "Platform as a Service (PaaS)",
            "Software as a Service (SaaS)",
            "Disaster Recovery as a Service (DRaaS)"
        ],
        "correct_option_id": 0,
        "explanation": "IaaS allows organizations to control virtual machines, storage, and networking for disaster recovery."
    },
    {
        "question": "What is the main purpose of redundancy in business continuity?",
        "options": [
            "To increase network traffic",
            "To provide alternative systems or resources during failures",
            "To improve power efficiency",
            "To reduce costs"
        ],
        "correct_option_id": 1,
        "explanation": "Redundancy ensures that alternative systems or resources are available during failures."
    },
    {
        "question": "Which metric measures the time it takes to detect a disaster event?",
        "options": [
            "RPO",
            "MTTD (Mean Time to Detect)",
            "MTTR (Mean Time to Repair)",
            "RTO"
        ],
        "correct_option_id": 1,
        "explanation": "MTTD measures how quickly a disaster or failure event is detected."
    }
]